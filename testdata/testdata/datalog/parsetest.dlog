/*
 *   Copyright (c) 2014 Program Analysis Group, Georgia Tech
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */
erRelationshipEdgeLabel('dependents_of', 0, 'Employee').
erRelationshipEdgeLabel('dependents_of', 1, 'Dependent').
erRelationshipEdgeLabel('manages', 0, 'Manager').
erRelationshipEdgeLabel('manages', 1, 'Department Managed').
erRelationshipEdgeLabel('controls', 0, 'Controlling Department').
erRelationshipEdgeLabel('controls', 1, 'Controlled Project').
erRelationshipEdgeLabel('supervision', 0, 'Supervisor').
erRelationshipEdgeLabel('supervision', 1, 'Supervisee').
erRelationshipEdgeLabel('works_for', 0, 'Employee').
erRelationshipEdgeLabel('works_for', 1, 'Department').
erRelationshipEdgeLabel('works_on', 0, 'Employee').
erRelationshipEdgeLabel('works_on', 1, 'Project').
sqlOperator(11, 'and').
sqlOperator(16, '>').
sqlOperator(19, '<').
sqlLiteralValue(18, 100000).
sqlLiteralValue(21, 1000000).
lrnAttributeLabel('Employee', 'Fname', 'fname', 'DefaultAttributeLabelRule').
lrnAttributeLabel('Employee', 'Lname', 'lname', 'DefaultAttributeLabelRule').
lrnAttributeLabel('Employee', 'Salary', 'salary', 'DefaultAttributeLabelRule').
lrnAttributeLabel('Employee', 'Fname', 'first name', 'DefaultAttributeLabelRule').
lrnAttributeLabel('Employee', 'Lname', 'last name', 'DefaultAttributeLabelRule').
erRelationshipJoinType('dependents_of', 'foreign_key').
erRelationshipJoinType('manages', 'foreign_key').
erRelationshipJoinType('controls', 'foreign_key').
erRelationshipJoinType('supervision', 'foreign_key').
erRelationshipJoinType('works_for', 'foreign_key').
erRelationshipJoinType('works_on', 'lookup_table').
erRelationshipEdgeEntity('dependents_of', 0, 'Employee').
erRelationshipEdgeEntity('dependents_of', 1, 'Dependent').
erRelationshipEdgeEntity('manages', 0, 'Employee').
erRelationshipEdgeEntity('manages', 1, 'Department').
erRelationshipEdgeEntity('controls', 0, 'Department').
erRelationshipEdgeEntity('controls', 1, 'Project').
erRelationshipEdgeEntity('supervision', 0, 'Employee').
erRelationshipEdgeEntity('supervision', 1, 'Employee').
erRelationshipEdgeEntity('works_for', 0, 'Employee').
erRelationshipEdgeEntity('works_for', 1, 'Department').
erRelationshipEdgeEntity('works_on', 0, 'Employee').
erRelationshipEdgeEntity('works_on', 1, 'Project').
sqlNodeHasType(0, 'SelectNode').
sqlNodeHasType(1, 'ResultColumnList').
sqlNodeHasType(2, 'ResultColumn').
sqlNodeHasType(3, 'ColumnReference').
sqlNodeHasType(4, 'ResultColumn').
sqlNodeHasType(5, 'ColumnReference').
sqlNodeHasType(6, 'ResultColumn').
sqlNodeHasType(7, 'ColumnReference').
sqlNodeHasType(8, 'FromList').
sqlNodeHasType(9, 'FromBaseTable').
sqlNodeHasType(10, 'FromBaseTable').
sqlNodeHasType(11, 'AndNode').
sqlNodeHasType(16, 'BinaryRelationalOperatorNode').
sqlNodeHasType(17, 'ColumnReference').
sqlNodeHasType(18, 'NumericConstantNode').
sqlNodeHasType(19, 'BinaryRelationalOperatorNode').
sqlNodeHasType(20, 'ColumnReference').
sqlNodeHasType(21, 'NumericConstantNode').
symIsNoun('NN').
symIsNoun('NNS').
symIsNoun('NNP').
symIsNoun('NNPS').
symIsAdverb('RB').
symIsAdverb('RBR').
symIsAdverb('RBS').
erJoinFK('dependents_of', 0, 'dependent', 'employee_ssn').
erJoinFK('manages', 0, 'department', 'manager_ssn').
erJoinFK('controls', 0, 'project', 'department_id').
erJoinFK('supervision', 0, 'employee', 'manager_ssn').
erJoinFK('works_for', 0, 'employee', 'department_id').
erJoinFK('works_on', 0, 'works_on', 'employee_ssn').
erJoinFK('works_on', 1, 'works_on', 'project_id').
erRelationship('dependents_of').
erRelationship('manages').
erRelationship('controls').
erRelationship('supervision').
erRelationship('works_for').
erRelationship('works_on').
sqlTableName(9, 'employee').
sqlTableName(10, 'employee').
symIsVerb('VB').
symIsVerb('VBD').
symIsVerb('VBG').
symIsVerb('VBN').
symIsVerb('VBP').
symIsVerb('VBZ').
erAttributeIsKey('Department', 'Name').
erAttributeIsKey('Department', 'Number').
erAttributeIsKey('Project', 'Name').
erAttributeIsKey('Project', 'Number').
erAttributeIsKey('Employee', 'Ssn').
erAttributeIsKey('Dependent', 'Name').
erEntity('Department').
erEntity('Project').
erEntity('Employee').
erEntity('Dependent').
sqlTableAlias(3, 'e').
sqlTableAlias(5, 'e').
sqlTableAlias(7, 's').
sqlTableAlias(9, 'e').
sqlTableAlias(10, 's').
sqlTableAlias(17, 's').
sqlTableAlias(20, 's').
erAttribute('Department', 'Name').
erAttribute('Department', 'Number').
erAttribute('Department', 'Locations').
erAttribute('Project', 'Location').
erAttribute('Project', 'Name').
erAttribute('Project', 'Number').
erAttribute('Employee', 'Name').
erAttribute('Employee', 'Lname').
erAttribute('Employee', 'Fname').
erAttribute('Employee', 'Sex').
erAttribute('Employee', 'Salary').
erAttribute('Employee', 'Bdate').
erAttribute('Employee', 'Minit').
erAttribute('Employee', 'Address').
erAttribute('Employee', 'Ssn').
erAttribute('Dependent', 'Relationship').
erAttribute('Dependent', 'Name').
erAttribute('Dependent', 'Birth_date').
erAttribute('Dependent', 'Sex').
erAttribute('manages', 'Start_date').
erAttribute('works_on', 'Hours').
symIsChunk('NP').
symIsChunk('PP').
symIsChunk('VP').
symIsChunk('ADVP').
symIsChunk('ADJP').
symIsChunk('SBAR').
symIsChunk('PRT').
symIsChunk('INTJ').
symIsChunk('S').
erEntityType('Department', 'thing').
erEntityType('Project', 'thing').
erEntityType('Employee', 'person').
erEntityType('Dependent', 'person').
erAttributeDescribes('Department', 'Name', 'prepend').
erRelationshipEdgeCardinality('dependents_of', 0, -1).
erRelationshipEdgeCardinality('dependents_of', 1, 1).
erRelationshipEdgeCardinality('manages', 0, 1).
erRelationshipEdgeCardinality('manages', 1, 1).
erRelationshipEdgeCardinality('controls', 0, -1).
erRelationshipEdgeCardinality('controls', 1, 1).
erRelationshipEdgeCardinality('supervision', 0, 1).
erRelationshipEdgeCardinality('supervision', 1, -1).
erRelationshipEdgeCardinality('works_for', 0, -1).
erRelationshipEdgeCardinality('works_for', 1, 1).
erRelationshipEdgeCardinality('works_on', 0, -1).
erRelationshipEdgeCardinality('works_on', 1, -1).
erJoinPK('dependents_of', 0, 'employee', 'ssn').
erJoinPK('manages', 0, 'employee', 'ssn').
erJoinPK('controls', 0, 'department', 'id').
erJoinPK('supervision', 0, 'employee', 'ssn').
erJoinPK('works_for', 0, 'department', 'id').
erJoinPK('works_on', 0, 'employee', 'ssn').
erJoinPK('works_on', 1, 'project', 'id').
erAttributeMapsTo('Project', 'Number', 'project', 'id').
erAttributeMapsTo('Employee', 'Ssn', 'employee', 'ssn').
erAttributeMapsTo('Project', 'Name', 'project', 'name').
erAttributeMapsTo('Department', 'Number', 'department', 'id').
erAttributeMapsTo('Employee', 'Sex', 'employee', 'sex').
erAttributeMapsTo('Dependent', 'Relationship', 'dependent', 'relationship').
erAttributeMapsTo('Employee', 'Bdate', 'employee', 'birthdate').
erAttributeMapsTo('Employee', 'Minit', 'employee', 'middle_initial').
erAttributeMapsTo('Department', 'Name', 'department', 'name').
erAttributeMapsTo('manages', 'Start_date', 'department', 'manager_start_date').
erAttributeMapsTo('works_on', 'Hours', 'works_on', 'hours').
erAttributeMapsTo('Dependent', 'Name', 'dependent', 'name').
erAttributeMapsTo('Dependent', 'Sex', 'dependent', 'sex').
erAttributeMapsTo('Dependent', 'Bdate', 'dependent', 'birthdate').
erAttributeMapsTo('Employee', 'Address', 'employee', 'address').
erAttributeMapsTo('Employee', 'Salary', 'employee', 'salary').
erAttributeMapsTo('Project', 'Location', 'project', 'location').
erAttributeMapsTo('Employee', 'Fname', 'employee', 'first_name').
erAttributeMapsTo('Employee', 'Lname', 'employee', 'last_name').
sqlParentOf(0, 1).
sqlParentOf(0, 8).
sqlParentOf(0, 11).
sqlParentOf(1, 2).
sqlParentOf(1, 4).
sqlParentOf(1, 6).
sqlParentOf(2, 3).
sqlParentOf(4, 5).
sqlParentOf(6, 7).
sqlParentOf(8, 9).
sqlParentOf(8, 10).
sqlParentOf(11, 16).
sqlParentOf(11, 19).
sqlParentOf(16, 17).
sqlParentOf(16, 18).
sqlParentOf(19, 20).
sqlParentOf(19, 21).
lrnTableLabel(10, 'supervisor', 'JoinLabelRule').
lrnTableLabel(9, 'supervisee', 'JoinLabelRule').
lrnTableLabel(9, 'employee', 'DefaultTableLabelRule').
lrnTableLabel(10, 'employee', 'DefaultTableLabelRule').
lrnTableInRelationship(10, 'supervision', 0, 'JoinLabelRule').
lrnTableInRelationship(9, 'supervision', 1, 'JoinLabelRule').
symIsPronoun('PRP').
symIsPronoun('PRP$').
symIsPronoun('WP').
symIsPronoun('WP$').
sqlColumnName(3, 'first_name').
sqlColumnName(5, 'last_name').
sqlColumnName(7, 'salary').
sqlColumnName(17, 'salary').
sqlColumnName(20, 'salary').
symIsAdjective('JJ').
symIsAdjective('JJR').
symIsAdjective('JJS').
symParentOf(0, 1, 0).
symParentOf(0, 2, 1).
symParentOf(0, 3, 2).
symParentOf(0, 4, 3).
symParentOf(2, 5, 0).
symParentOf(2, 6, 1).
symParentOf(4, 7, 0).
symParentOf(4, 8, 1).
symParentOf(5, 9, 0).
symParentOf(5, 10, 1).
symParentOf(5, 11, 2).
symParentOf(6, 12, 0).
symParentOf(6, 13, 1).
symParentOf(6, 14, 2).
symParentOf(9, 15, 0).
symParentOf(9, 16, 1).
symParentOf(10, 17, 0).
symParentOf(10, 18, 1).
symParentOf(12, 19, 0).
symParentOf(13, 20, 0).
symParentOf(13, 21, 1).
symRefsAttribute(15, 'Employee', 'Fname').
symRefsAttribute(16, 'Employee', 'Lname').
symRefsAttribute(19, 'Employee', 'Salary').
symType(0, 'ROOT').
symType(1, 'SELECT').
symType(2, 'AND').
symType(3, 'WHERE').
symType(4, 'AND').
symType(5, 'SEQUENCE').
symType(6, 'SEQUENCE').
symType(7, 'BINARY_COMPARISON').
symType(8, 'BINARY_COMPARISON').
symType(9, 'ATTRIBUTE_LIST').
symType(10, 'LITERALS').
symType(11, 'TABLE_ENTITY').
symType(12, 'ATTRIBUTE_LIST').
symType(13, 'LITERALS').
symType(14, 'TABLE_ENTITY').
symType(15, 'ATTRIBUTE').
symType(16, 'ATTRIBUTE').
symType(17, 'LITERAL').
symType(18, 'LITERAL').
symType(19, 'ATTRIBUTE').
symType(20, 'LITERAL').
symType(21, 'LITERAL').
symPartOfSpeech(0, 'S').
symPartOfSpeech(1, 'VB').
symPartOfSpeech(2, 'NP').
symPartOfSpeech(3, 'WRB').
symPartOfSpeech(4, 'NP').
symPartOfSpeech(5, 'NP').
symPartOfSpeech(6, 'NP').
symPartOfSpeech(7, 'QP').
symPartOfSpeech(8, 'QP').
symPartOfSpeech(9, 'NP').
symPartOfSpeech(10, 'PP').
symPartOfSpeech(11, 'NN').
symPartOfSpeech(12, 'NP').
symPartOfSpeech(13, 'PP').
symPartOfSpeech(14, 'NN').
symPartOfSpeech(15, 'NN').
symPartOfSpeech(16, 'NN').
symPartOfSpeech(17, 'IN').
symPartOfSpeech(18, 'DT').
symPartOfSpeech(19, 'NN').
symPartOfSpeech(20, 'IN').
symPartOfSpeech(21, 'DT').
symRefsTable(11, 9).
symRefsTable(14, 10).
sqlAncestorOf(?a, ?d) :- sqlParentOf(?a, ?d).
sqlAncestorOf(?a, ?d) :- sqlParentOf(?a, ?p), sqlParentOf(?p, ?d).
sqlIsAttributeEquality(?eq) :- sqlNodeHasType(?eq, 'BinaryRelationalOperatorNode'), sqlOperator(?eq, '='), sqlParentOf(?eq, ?c1), sqlParentOf(?eq, ?c2), NOT_EQUAL(?c1, ?c2), sqlNodeHasType(?c1, 'ColumnReference'), sqlNodeHasType(?c2, 'ColumnReference').
sqlIsKeyEquality(?eq, ?t1, ?attr1, ?t2, ?attr2) :- sqlIsAttributeEquality(?eq), sqlParentOf(?eq, ?c1), sqlParentOf(?eq, ?c2), sqlTableAlias(?t1, ?alias1), sqlTableAlias(?c1, ?alias1), sqlColumnName(?c1, ?attr1), sqlTableAlias(?t2, ?alias2), sqlTableAlias(?c2, ?alias2), sqlColumnName(?c2, ?attr2).
sqlStringLiteral(?node, ?value) :- sqlNodeHasType(?node, 'CharConstantNode'), sqlLiteralValue(?node, ?value).
sqlLiteralComparison(?eq, ?op, ?table, ?colname, ?val) :- sqlNodeHasType(?eq, 'BinaryRelationalOperatorNode'), sqlOperator(?eq, ?op), sqlParentOf(?eq, ?child1), sqlParentOf(?eq, ?child2), NOT_EQUAL(?child1, ?child2), sqlTableAlias(?table, ?alias), sqlTableAlias(?child1, ?alias), sqlColumnName(?child1, ?colname), sqlStringLiteral(?child2, ?val).
sqlOpAlwaysCandidate(?node) :- sqlNodeHasType(?node, 'BinaryRelationalOperatorNode').
sqlOpAlwaysCandidate(?node) :- sqlNodeHasType(?node, 'AndNode').
sqlOperatorAlways(?node) :- sqlOpAlwaysCandidate(?node), sqlParentOf(?p, ?node), sqlNodeHasType(?p, 'SelectNode').
sqlOperatorAlways(?node) :- sqlOpAlwaysCandidate(?node), sqlParentOf(?p, ?node), sqlNodeHasType(?p, 'JoinNode').
sqlOperatorAlways(?node) :- sqlOpAlwaysCandidate(?node), sqlParentOf(?p, ?node), sqlOperatorAlways(?p).
sqlIsTablePair(?t1, ?t2) :- sqlNodeHasType(?t1, 'FromBaseTable'), sqlNodeHasType(?t2, 'FromBaseTable'), NOT_EQUAL(?t1, ?t2).
sqlImplicitJoined(?t1, ?t2) :- sqlIsTablePair(?t1, ?t2), sqlParentOf(?flist, ?t1), sqlParentOf(?flist, ?t1), sqlNodeHasType(?flist, 'FromList').
sqlExplicitJoined(?t1, ?t2) :- sqlIsTablePair(?t1, ?t2), sqlParentOf(?join, ?t1), sqlParentOf(?join, ?t2), sqlNodeHasType(?join, 'JoinNode').
sqlJoined(?t1, ?t2) :- sqlImplicitJoined(?t1, ?t2).
sqlJoined(?t1, ?t2) :- sqlExplicitJoined(?t1, ?t2).
erEntityOrRelationship(?name) :- erEntity(?name).
erEntityOrRelationship(?name) :- erRelationship(?name).
erTableRefsEntity(?tname, ?ent) :- sqlTableName(?tref, ?tname), erEntity(?ent), erAttributeMapsTo(?ent, ?attr, ?tname, ?column).
erFKJoin(?rel, ?pktable, ?pkattr, ?fktable, ?fkattr) :- erRelationshipJoinType(?rel, 'foreign_key'), erJoinPK(?rel, 0, ?pktable, ?pkattr), erJoinFK(?rel, 0, ?fktable, ?fkattr).
erFKJoinPKSide(?rel, ?pos) :- erRelationshipJoinType(?rel, 'foreign_key'), erRelationshipEdgeCardinality(?rel, ?pos, ?card), GREATER_EQUAL(?card, 0).
erFKJoinFKSide(?rel, ?pos) :- erRelationshipJoinType(?rel, 'foreign_key'), erRelationshipEdgeCardinality(?rel, ?pos, ?card), LESS(?card, 0).
erFKJoinSides(?rel, ?pkSide, ?fkSide) :- erFKJoinPKSide(?rel, ?pkSide), erFKJoinFKSide(?rel, ?fkSide).
erLookupJoinKeyPair(?rel, ?pos, ?pktable, ?pkattr, ?fktable, ?fkattr) :- erRelationshipJoinType(?rel, 'lookup_table'), erJoinPK(?rel, ?pos, ?pktable, ?pkattr), erJoinFK(?rel, ?pos, ?fktable, ?fkattr).
joinRuleFK(?rel, ?tref1, ?tname1, ?attr1, ?tref2, ?tname2, ?attr2, ?eq) :- sqlJoined(?tref1, ?tref2), sqlIsKeyEquality(?eq, ?tref1, ?attr1, ?tref2, ?attr2), sqlTableName(?tref1, ?tname1), sqlTableName(?tref2, ?tname2), erFKJoin(?rel, ?tname1, ?attr1, ?tname2, ?attr2).
joinRuleLookupOneSide(?rel, ?tref1, ?tname1, ?attr1, ?tref2, ?tname2, ?attr2, ?eq, ?pos) :- sqlJoined(?tref1, ?tref2), sqlIsKeyEquality(?eq, ?tref1, ?attr1, ?tref2, ?attr2), sqlTableName(?tref1, ?tname1), sqlTableName(?tref2, ?tname2), erLookupJoinKeyPair(?rel, ?pos, ?tname1, ?attr1, ?tname2, ?attr2).
joinRuleLookup(?rel, ?tref1, ?tname1, ?attr1, ?tref2, ?tname2, ?attr2, ?tref3, ?tname3, ?attr3, ?tref4, ?tname4, ?attr4, ?eq1, ?eq2) :- joinRuleLookupOneSide(?rel, ?tref1, ?tname1, ?attr1, ?tref2, ?tname2, ?attr2, ?eq1, 0), joinRuleLookupOneSide(?rel, ?tref3, ?tname3, ?attr3, ?tref4, ?tname4, ?attr4, ?eq2, 1).
ruleDefaultAttributeLabel(?entity, ?attribute, ?tableName, ?colName) :- sqlColumnName(?colId, ?colName), sqlTableAlias(?colId, ?tableAlias), sqlTableAlias(?tableId, ?tableAlias), sqlTableName(?tableId, ?tableName), erTableRefsEntity(?tableName, ?entity), erAttributeMapsTo(?entity, ?attribute, ?tableName, ?colName).
ruleAttributeDescribes(?table, ?eq, ?value, ?type) :- erAttributeDescribes(?ent, ?attr, ?type), erAttributeMapsTo(?ent, ?attr, ?tablename, ?col), sqlTableName(?table, ?tablename), sqlLiteralComparison(?eq, ?op, ?table, ?col, ?value), EQUAL(?op, '=').
lrnTableLabel(?table, ?label, ?source) :- lrnTableLabel(?table, ?otherlabel, ?othersource), NOT_EQUAL(?source, ?othersource), EQUAL(?source, 'DescribingAttributeLabelRule'), ruleAttributeDescribesLabel(?table, ?value, ?type), EQUAL(?type, 'prepend'), STRING_CONCAT(?value, ' ', ?temp), STRING_CONCAT(?temp, ?otherlabel, ?label).
lrnTableLabel(?table, ?label, ?source) :- lrnTableLabel(?table, ?label, ?othersource), NOT_EQUAL(?source, ?othersource), EQUAL(?source, 'DescribingAttributeLabelRule'), ruleAttributeDescribesLabel(?table, ?value, ?type), EQUAL(?type, 'replace'), EQUAL(?label, ?value).
symIsLeaf(?id) :- symParentOf(?parent, ?id, ?pos), !symParentOf(?id, ?child, ?pos2).
symNonLiteralLeaves(?id) :- symIsLeaf(?id), symType(?id, ?type), NOT_EQUAL(?type, 'LITERAL').

?-?nodeId=17,sqlNodeHasType(?nodeId, 'ColumnReference'),sqlColumnName(?nodeId,?cname),sqlTableAlias(?nodeId,?talias),sqlTableAlias(?tid,?talias),sqlTableName(?tid,?tname).