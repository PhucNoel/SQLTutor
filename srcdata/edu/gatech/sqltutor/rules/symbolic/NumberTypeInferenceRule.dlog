
// in case we need to expand concrete types
ruleNumberTypeInference_binop(?binop) :-
  sqlNodeHasType(?binop, 'BinaryRelationalOperatorNode').
ruleNumberTypeInference_number(?num) :-
  sqlNodeHasType(?num, 'NumericConstantNode').
  
// column and number are direct children of a binary operator
ruleNumberTypeInference_colAndNum(?binop, ?col, ?num) :-
  sqlNodeHasType(?binop, 'BinaryRelationalOperatorNode'),
  ruleNumberTypeInference_number(?num),
  sqlNodeHasType(?col, 'ColumnReference'),
  sqlParentOf(?binop,?col),
  sqlParentOf(?binop,?num).
  
// for BETWEEN, column is a child and the number node is nested
ruleNumberTypeInference_colAndNum(?binop, ?col, ?num) :-
  sqlNodeHasType(?binop, 'BetweenOperatorNode'),
  ruleNumberTypeInference_number(?num),
  sqlNodeHasType(?col, 'ColumnReference'),
  sqlParentOf(?binop,?col),
  sqlParentOf(?binop,?valList),
  sqlNodeHasType(?valList, 'ValueNodeList'),
  sqlParentOf(?valList, ?num).
  
  
ruleNumberTypeInference(?binop, ?attrType, ?num) :-
  ruleNumberTypeInference_colAndNum(?binop, ?col, ?num),
  sqlColumnInfo(?col, ?tableAlias, ?tableName, ?colName),
  erAttributeMapsTo(?parent,?attr,?tableName,?colName),
  erAttributeDataType(?parent,?attr,?attrType).
  