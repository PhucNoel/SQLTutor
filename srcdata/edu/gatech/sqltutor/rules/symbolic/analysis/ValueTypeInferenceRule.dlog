
// in case we need to expand concrete types
ruleValueTypeInference_binop(?binop) :-
  sqlNodeHasType(?binop, 'BinaryRelationalOperatorNode').
  
ruleValueTypeInference_constant(?constant) :- sqlNodeHasType(?constant, 'CharConstantNode').
ruleValueTypeInference_constant(?constant) :- sqlNodeHasType(?constant, 'NumericConstantNode').
  
// column and number are direct children of a binary operator
ruleValueTypeInference_colAndConst(?binop, ?col, ?constant) :-
  sqlNodeHasType(?binop, 'BinaryRelationalOperatorNode'),
  ruleValueTypeInference_constant(?constant),
  sqlNodeHasType(?col, 'ColumnReference'),
  sqlParentOf(?binop,?col),
  sqlParentOf(?binop,?constant).
  
// for BETWEEN, column is a child and the number node is nested
ruleValueTypeInference_colAndConst(?binop, ?col, ?constant) :-
  sqlNodeHasType(?binop, 'BetweenOperatorNode'),
  ruleValueTypeInference_constant(?constant),
  sqlNodeHasType(?col, 'ColumnReference'),
  sqlParentOf(?binop,?col),
  sqlParentOf(?binop,?valList),
  sqlNodeHasType(?valList, 'ValueNodeList'),
  sqlParentOf(?valList, ?constant).
  
  
ruleValueTypeInference(?binop, ?attrType, ?constant) :-
  ruleValueTypeInference_colAndConst(?binop, ?col, ?constant),
  sqlColumnInfo(?col, ?tableAlias, ?tableName, ?colName),
  erAttributeMapsTo(?parent,?attr,?tableName,?colName),
  erAttributeDataType(?parent,?attr,?attrType).
  